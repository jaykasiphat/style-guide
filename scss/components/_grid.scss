// ============================================
// Grid
// styles related to the grid system and
// main container.
// ============================================

.container {
  margin: auto;
  width: 90%;
  max-width: $max-width;
  @include mq('sm') {
    padding-left: 0;
    padding-right: 0;
    width: 80%;
    margin: auto;
  }
}

// grid base class
.grid {
  &__row {
    padding: em(16px) em(10px);
    @include flex($dir: column);
    @include mq(md) {
      @include flex($dir: row);
    }

    &:last-child {
      margin-bottom: 2rem;
      @include mq(md) {
        margin-bottom: 5rem;
      }
    }
  }

  &__col {
    // create grid columns dynamically
    // loop through each column size
    @for $i from 1 through 12 {

      // concatenate CSS selector, ie when $i = 1,
      // selector would be .grid__col--1
      &--#{$i} {

        // base styles applied to all grid columns
        @include flex($dir: column);
        margin-top: em(10px);
        flex-basis: 100%;
        padding: em(8px);

        @include mq(md) {
          // base stlyes applied to all grid columns
          margin-top: 0;
          @include flex($dir: row, $jus: space-evenly, $alni: flex-start);
          // make column width a percentage of the column number / total columns
          flex-basis: #{$i / 12 * 100 + "%"} ;
        }
      }
    }
  }
}

[class^=grid__col] {
  // grid__col + grid__col, targets two sibling columns
  & + & {
    @include mq(md) {
      margin-left: 10px; // add grid gutter
    }
  }
}

// grid color
@each $num, $color in $color-grid {
  .grid__col--#{$num}.theme__colors {
    background-color: $color;
    border-radius: $br-rounded;
  }
}

.centered {
  @include mq(md) {
    margin-left: auto;
    margin-right: auto;
  }
}
